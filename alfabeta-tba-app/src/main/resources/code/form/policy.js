a => a.text("policyName")
                    .datalist("policyTypes", d => d.toLinkedMap(["TERM", "WHOLE_LIFE", "UNIVERSAL", "ENDOWMENT", "CAR", "PROPERTY", "GENERAL LIABILITY", "COMMERCIAL CAR", "FLEET", "COMMERCIAL PROPERTY", "CYBER RISK", "PRODUCT LIABILITY", "TRAVEL", "HEALTH"]))
                    .dropdown("policyType", "policyTypes")
                    .text("policyDescription")
                    .date("startDate")
                    .date("endDate")
                    .date("coverageStartDate")
                    .date("coverageEndDate")
                    .number("premium")
                    .datalist("currencies", d => d.toLinkedMap(["PLN","GBP","USD","EUR","LBP"]))
                    .dropdown("premiumCurrency", "currencies")
                    .datalist("premiumPaymentTypes", d => d.toLinkedMap(["MONTHLY", "QUARTERLY", "ANNUALLY", "SEMI_ANNUALLY", "SINGLE"]))
                    .dropdown("premiumPaymentType", "premiumPaymentTypes")
                    .datalist("policyStatuses", d => d.toLinkedMap(["Active", "Expired", "Cancelled"]))
                    .dropdown("status", "policyStatuses")
                    .manyToOne("clientId","client").referenceDescriptionSource("coalesce(first_name,company_name)||' '||coalesce(last_name,'')")
                    .manyToOne("agentId","agent")
                    .datalist("insurer", d => d.toLinkedMap(["MetLife", "Swan", "Allianz"]))
                    .dropdown("insurer", "insurer")
                    .text("productId")
                    .checkbox("readyForRenewal").sqlFormula("now() + interval '15 days' >= end_date and end_date > now()")
                    .files("filesId", (f,r) => r.getFileDtos(f.entity), "image/png,image/jpeg,application/pdf")